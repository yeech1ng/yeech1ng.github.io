---
title: "Final Project"
---

Have you ever wondered why almost everyone around you watches, or at least knows the names of some K-Dramas? If so...

Hello and welcome to my data story! :)

![me watching dramas instead of working](images/finalproj_1){width="900"}

As an avid K-Drama watcher, I thought it would be interesting to investigate: **"What makes K-Dramas so popular globally?"**, and showcase the driving factors for my final project.

I used several data sets from Statista and Kaggle, namely data on the top 5000 dramas which includes information on the name, episodes, released year, language (selected only Korean, Thai, and Japanese), rating, and ranking. 

Others included specific data on the name, year, genres, tags, episode number, the platform it was aired on, user score, and rank for Korean, Thai, and Japanese Dramas. I also used data on the user reviews for each language's dramas, which included ratings on the story, acting cast, music, rewatch value, and the overall ranking. This was so I could have a better basis for comparison.

![lets goo](images/ipadfinal){width="600"}


# Introduction

In recent years, the film and television industries have seen exponential growth, with the global entertainment market topping USD$100 billion for the first time ever in 2019 (Escandon, 2020). Moreover, given the onset of globalisation and the rise of streaming services like Netflix and Disney+, viewers have greater access to shows that are produced and distributed worldwide. 

With an increasing influx of shows in the market, this has created a fast-paced and competitive climate that makes it difficult for producers and creators to stand out. 

# Hallyu & The Dominance of K-Dramas

However, amidst this competitive landscape, Korean dramas, or K-Dramas, have managed to carve out a unique niche and capture the attention of audiences globally. 

In a 2023 survey conducted across 26 countries, majority of respondents (41%) stated that K-Dramas were very popular in their countries, and around 68% of respondents felt that K-Dramas were generally popular even outside of dedicated fan circles.

```{r, eval=TRUE, echo=FALSE}

suppressMessages({
  suppressWarnings({
    library(ggplot2)
    library(RColorBrewer)
    library(plotly, warn.conflicts = FALSE)
    

# Read the CSV file
kdrama_pop_2022 <- read.csv("datasets/k-drama-popularity-worldwide-2022.csv", fill=TRUE)

# Define custom order for the levels of the "Popularity" variable
popularity_order <- c("Very popular", "Moderately popular", "Slightly popular", "Not popular")
kdrama_pop_2022$Popularity <- factor(kdrama_pop_2022$Popularity, levels = popularity_order)

# Create a vector of colors for the bars
colors <- brewer.pal(4, "Set3") 

# Create the bar plot with specified colors and custom order
bp1 <- ggplot(kdrama_pop_2022, aes(x = Popularity, y = share_of_respondents , fill = Popularity)) +
  geom_bar(stat = "identity") +
  labs(title = "K-Drama Popularity Worldwide in 2022", x = "Popularity", y = "Share of Respondents", caption = "Source: Statista") +
  theme_bw() +
  scale_fill_manual(values = colors)

ggplotly(bp1)

  })
})
```
 
This illustrates how K-Dramas enjoy high popularity amongst international viewersâ€¦

# Comparison with Japanese and Thai Dramas

## 1. Ratings

```{r, eval=TRUE, echo=FALSE}
suppressMessages({
  suppressWarnings({
    library(ggplot2)
    library(RColorBrewer)
    library(tidyverse)
  
top_5000dramas <- read.csv("datasets/top_5000_dramas.csv")

top_5000dramas_filtered <- top_5000dramas %>%
  filter(released_year >= 2018 & grepl("Japanese|Thai|Korean", Language))

colors <- brewer.pal(3, "Set2") 

# Calculate average ratings for each language
avg_ratings <- top_5000dramas_filtered %>%
  group_by(Language) %>%
  summarize(avg_rating = mean(Rating, na.rm = TRUE))

# Create a bar plot
bp2 <- ggplot(avg_ratings, aes(x = Language, y = avg_rating, fill = Language)) +
  geom_bar(stat = "identity") +
  labs(title = "Average Ratings of Thai, Japanese, and Korean Dramas from 2018 to 2023",
       x = "Language", y = "Average Rating") +
  theme_bw() + scale_fill_manual(values = colors)

ggplotly(bp2)

  })
})

```

separator text placeholder

```{r, eval=TRUE, echo=FALSE}


general_kdrama <- read.csv("datasets/kor_drama.csv")
general_tdrama <- read.csv("datasets/tha_drama.csv")
general_jdrama <- read.csv("datasets/jap_drama.csv")

# Convert year to numeric 
suppressWarnings({
general_kdrama$year <- as.numeric(as.character(general_kdrama$year))
general_tdrama$year <- as.numeric(as.character(general_tdrama$year))
general_jdrama$year <- as.numeric(as.character(general_jdrama$year))
})

# Filter data and calculate average rating per year
kdrama_avg_rating <- general_kdrama %>%
  filter(year >= 2018) %>%
  group_by(year) %>%
  summarize(avg_user_score = mean(tot_user_score, na.rm = TRUE), language = "Korean")

tdrama_avg_rating <- general_tdrama %>%
  filter(year >= 2018) %>%
  group_by(year) %>%
  summarize(avg_user_score = mean(tot_user_score, na.rm = TRUE), language = "Thai")

jdrama_avg_rating <- general_jdrama %>%
  filter(year >= 2018) %>%
  group_by(year) %>%
  summarize(avg_user_score = mean(tot_user_score, na.rm = TRUE), language = "Japanese")

# Combine the dataframes
combined_data <- bind_rows(kdrama_avg_rating, tdrama_avg_rating, jdrama_avg_rating)

# Colours
colors <- brewer.pal(3, "Set2")

# Plot the line graph
lg1 <- ggplot(combined_data, aes(x = year, y = avg_user_score, colour=language)) +
  geom_line() +
  labs(title = "User Scores from 2018 to 2023", x = "Year", y = "Average User Score") +
  theme_bw() +  scale_color_brewer(palette = "Set2")

ggplotly(lg1)

```

## 2. Genre & Tags

```{r letter-a, echo=FALSE}

```

```{r, eval=FALSE,echo=FALSE}
merged_data <- bind_rows(
  mutate(general_kdrama, Language = "Korean"),
  mutate(general_tdrama, Language = "Thai"),
  mutate(general_jdrama, Language = "Japanese")
)

general_kdrama %>%
  filter(year >= 2018)
```



K-Drama
```{r, eval=TRUE, echo=FALSE}
suppressMessages({
  suppressWarnings({

library(wordcloud2)
library(tidyverse)
library(tm)

kdrama_tags <- general_kdrama %>% filter(year >= 2018) %>% select(tags) 

kdocs <- Corpus(VectorSource(kdrama_tags))

kdocs <- kdocs %>% 
  tm_map(removeNumbers) %>%
  tm_map(removePunctuation) %>%
  tm_map(stripWhitespace) 

kdocs <- tm_map(kdocs, content_transformer(tolower))
kdocs <- tm_map(kdocs, removeWords, stopwords("english"))

kdtm <- TermDocumentMatrix(kdocs)
kmatrix <- as.matrix(kdtm)
kwords <- sort(rowSums(kmatrix), decreasing=TRUE)
ktags_df <- data.frame(word=names(kwords), freq=kwords)

wordcloud2(slice_max(ktags_df, order_by= freq, n=10000), size=1.2, color='random-dark', shape='circle')

 })
})
```

T-Drama
```{r, eval=TRUE, echo=FALSE}

library(wordcloud2)
library(tidyverse)
library(tm)

tdrama_tags <- general_tdrama %>% filter(year >= 2018) %>% select(tags) 

tdocs <- Corpus(VectorSource(tdrama_tags))

tdocs <- tdocs %>% 
  tm_map(removeNumbers) %>%
  tm_map(removePunctuation) %>%
  tm_map(stripWhitespace) 

tdocs <- tm_map(tdocs, content_transformer(tolower))
tdocs <- tm_map(tdocs, removeWords, stopwords("english"))

tdtm <- TermDocumentMatrix(kdocs)
tmatrix <- as.matrix(tdtm)
twords <- sort(rowSums(tmatrix), decreasing=TRUE)
ttags_df <- data.frame(word=names(twords), freq=twords)

wordcloud2(slice_max(ttags_df, order_by= freq, n=1000), size=1.0, color='random-dark', shape='circle')

```


separator text placeholder


```{=html}
<iframe height="400" width="100%" frameborder="no" src="https://yeech1ng.shinyapps.io/sample_app/ "> </iframe>
```
