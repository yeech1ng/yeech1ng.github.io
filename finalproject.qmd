---
title: "Final Project"
---

Have you ever wondered why almost everyone around you watches, or at least knows the names of some K-Dramas? If so...

Hello and welcome to my data story! :)

![source: me](images/finalproj_1){width="900"}

As an avid K-Drama watcher, I thought it would be interesting to investigate: **"What makes K-Dramas so popular globally?"**, and showcase the driving factors for my final project.

I used several data sets from Kaggle, namely data on the top 5000 dramas which includes information on the name, episodes, released year, language (selected only Korean, Thai, and Japanese), rating, and ranking.

Others included specific data on the name, year, genres, tags, episode number, the platform it was aired on, user score, and rank for Korean, Thai, and Japanese Dramas. I also used data on the user reviews for each language's dramas, which included ratings on the story, acting cast, music, rewatch value, and the overall ranking. This was so I could have a better basis for comparison.

![source: me](images/ipadfinal){width="600"}

# Introduction

In recent years, the film and television industries have seen exponential growth, with the global entertainment market topping USD\$100 billion for the first time ever in 2019 (Escandon, 2020). Moreover, given the onset of globalisation and the rise of streaming services like Netflix and Disney+, viewers have greater access to shows that are produced and distributed worldwide.

With an increasing influx of shows in the market, this has created a fast-paced and competitive climate that makes it difficult for producers and creators to stand out.

# Hallyu & The Dominance of K-Dramas

However, amidst this competitive landscape, Korean dramas, or K-Dramas, have managed to carve out a unique niche and capture the attention of audiences globally.

In a 2023 survey conducted across 26 countries, **majority of respondents (88.8%)** stated that K-Dramas are **popular** in their countries, and only a small minority (11.2%) reported that it is not.

```{r, eval=TRUE, echo=FALSE}

suppressMessages({
  suppressWarnings({
    library(ggplot2)
    library(RColorBrewer)
    library(plotly, warn.conflicts = FALSE)
    

# Read the CSV file
kdrama_pop_2022 <- read.csv("datasets/k-drama-popularity-worldwide-2022.csv", fill=TRUE)

# Define custom order for the levels of the "Popularity" variable
popularity_order <- c("Very popular", "Moderately popular", "Slightly popular", "Not popular")
kdrama_pop_2022$Popularity <- factor(kdrama_pop_2022$Popularity, levels = popularity_order)

# Create a vector of colors for the bars
colors <- brewer.pal(4, "Pastel1") 

# Create the bar plot with specified colors and custom order
bp1 <- ggplot(kdrama_pop_2022, aes(x = Popularity, y = share_of_respondents , fill = Popularity)) +
  geom_bar(stat = "identity", color="black") +
  labs(title = "K-Drama Popularity Worldwide in 2022", x = "Popularity", y = "Share of Respondents", caption = "Source: Statista") +
  theme_bw() +
  scale_fill_manual(values = colors)

ggplotly(bp1)

  })
})
```

```{=html}
<style>
hr {
  border: none;
  height: 2px; /* Adjust the height as needed */
  background-color: #ccc; /* Adjust the color as needed */
  margin: 10px 0; /* Adjust the margin as needed */
}
</style>
```

------------------------------------------------------------------------

<!-- Content -->

Evidently, K-Dramas enjoy high popularity from audiences from all around the world beyond Korea, highlighting the **widespread interest** in K-Dramas on a global scale. This has generated significant financial gains for South Korea’s economy, with K-Drama exports increasing by **over 72%** in recent years (Statista, 2023b).

In fact, this is part of the larger cultural phenomenon known as **“Hallyu”, or the Korean Wave**, which refers to the global craze for South Korean pop culture and other cultural elements, which includes entertainment like K-Dramas and K-Pop.

![source: Pixabay](images/hallyu_palace.jpg){width="600"}

This begs the question: How does Korea do this? In particular, how did K-Dramas **garner so much popularity and continuously stay on top of the game**? What can other region’s entertainment industry learn from South Korea?

Let's find out!

# Comparison with Japanese and Thai Dramas

Let us first start with comparing some data between Korean, Japanese, and Thai dramas for some insights on their differences and similarities in terms of the dramas they produce.

## 1. K-Dramas Generally Have The Highest Ratings

Ratings are an essential metric in evaluating the success and popularity of dramas, providing valuable insight into audience reception and their preferences. 

Generally, the higher or more positive ratings a drama receives, be it quantitatively or qualitatively, the greater its appeal and impact on viewers. 

```{r, eval=TRUE, echo=FALSE}
suppressMessages({
  suppressWarnings({
    library(ggplot2)
    library(RColorBrewer)
    library(tidyverse)
  
    top_5000dramas <- read.csv("datasets/top_5000_dramas.csv")

    top_5000dramas_filtered <- top_5000dramas %>%
      filter(released_year >= 2018 & grepl("Japanese|Thai|Korean", Language))

    colors <- brewer.pal(3, "Set2") 

    # Calculate average ratings for each language
    avg_ratings <- top_5000dramas_filtered %>%
      group_by(Language) %>%
      summarize(avg_rating = mean(Rating, na.rm = TRUE))

    # Create a boxplot
    bp2 <- ggplot(top_5000dramas_filtered, aes(x = Language, y = Rating, fill = Language)) +
      geom_boxplot() +
      labs(title = "Average Ratings of Thai, Japanese, and Korean Dramas from 2018 to 2023",
           x = "Language", y = "Rating") +
      theme_bw() + scale_fill_manual(values = colors)

    ggplotly(bp2)
  })
})


```

```{=html}
<style>
hr {
  border: none;
  height: 2px; /* Adjust the height as needed */
  background-color: #ccc; /* Adjust the color as needed */
  margin: 10px 0; /* Adjust the margin as needed */
}
</style>
```

------------------------------------------------------------------------

<!-- Content -->

Comparing the average ratings of Japanese, Thai, and Korean dramas from 2018 to 2023, it seems that it is a close fight between all 3 languages. Each are doing relatively well in the market with high ratings in the 7 points region (out of 10). 

However, K-Dramas ultimately emerge as the **frontrunner with an average rating of 7.86**, with Japanese dramas following closely behind with an average rating of 7.69, and lastly, Thai dramas with a nonetheless commendable average rating of 7.59. 

This shows that while each language’s dramas have their own unique charm that garner them a significant fan base and presence, K-Dramas stand out, **appealing to and resonating with the audiences the most**. 

This is further reinforced when analysing how ratings have progressed across time for each language's drama, particularly in the form of concrete scores that users give. 

Looking at this, let's split the time period of 2018 to 2023 to 3 smaller periods - pre-COVID years (2018 to 2019), COVID years (2020 to 2021), and post-COVID years (2022 to 2023).

```{r, eval=TRUE, echo=FALSE}


general_kdrama <- read.csv("datasets/kor_drama.csv")
general_tdrama <- read.csv("datasets/tha_drama.csv")
general_jdrama <- read.csv("datasets/jap_drama.csv")

# Convert year to numeric 
suppressWarnings({
general_kdrama$year <- as.numeric(as.character(general_kdrama$year))
general_tdrama$year <- as.numeric(as.character(general_tdrama$year))
general_jdrama$year <- as.numeric(as.character(general_jdrama$year))
})

# Filter data and calculate average rating per year
kdrama_avg_rating <- general_kdrama %>%
  filter(year >= 2018) %>%
  group_by(year) %>%
  summarize(avg_user_score = mean(tot_user_score, na.rm = TRUE), language = "Korean")

tdrama_avg_rating <- general_tdrama %>%
  filter(year >= 2018) %>%
  group_by(year) %>%
  summarize(avg_user_score = mean(tot_user_score, na.rm = TRUE), language = "Thai")

jdrama_avg_rating <- general_jdrama %>%
  filter(year >= 2018) %>%
  group_by(year) %>%
  summarize(avg_user_score = mean(tot_user_score, na.rm = TRUE), language = "Japanese")

# Combine the dataframes
combined_data <- bind_rows(kdrama_avg_rating, tdrama_avg_rating, jdrama_avg_rating)

# Colours
colors <- brewer.pal(3, "Set2")

# Plot the line graph
lg1 <- ggplot(combined_data, aes(x = year, y = avg_user_score, colour=language)) +
  geom_line() +
  labs(title = "User Scores from 2018 to 2023", x = "Year", y = "Average User Score") +
  theme_bw() +  scale_color_brewer(palette = "Set2")

ggplotly(lg1)

```

```{=html}
<style>
hr {
  border: none;
  height: 2px; /* Adjust the height as needed */
  background-color: #ccc; /* Adjust the color as needed */
  margin: 10px 0; /* Adjust the margin as needed */
}
</style>
```

------------------------------------------------------------------------

<!-- Content -->

In the pre-COVID years, K-Dramas maintained a **competitive edge** over Thai and Japanese dramas with higher user scores around **7.6**. However, during the COVID years, K-Dramas experienced a **significant dip to the 7.5 points region** - the lowest it has ever been, as compared to Japanese dramas which rose steadily.

Yet in a turn of events, in the post-COVID years, the average user scores of K-Dramas abruptly picked up in 2021 and **rose exponentially to a record high of 7.81 in 2023**, maintaining an increasing upward trend from 2021 to 2023. Meanwhile, the average user scores for both Thai and Japanese dramas **generally dipped to the 7.4 and 7.5 points region** respectively by 2023, demonstrating a falling trend.

This could  be attributed to the release of the Korean survival series drama, **Squid Game**, on 17 September 2021, which exploded on the international scene. In fact, Squid Game was crowned as Netflix's most-watched non-English series, with a staggering amount of 2,205,200,000 hours viewed as of March 31, 2024 (Netflix, n.d.), and one of the most popular K-Dramas internationally as of December 2022 (Statista, 2023a).

![Squid Game | source: Netflix](images/squidgame.png){width="550"}

It is likely that Squid Game's widespread popularity catapulted K-Dramas into the global spotlight, attracting new international audiences and interest. This recognition of Squid Game also likely prompted increased investment into Korean content from producers and streaming platforms in light of the rising viewership and interest from audiences from all over the world, solidifying its dominance in the market and entertainment industry.

## 2. Streaming Services Like Netflix Are Crucial for Outreach

Speaking of Netflix, the channels in which dramas are aired on play a crucial role in determining the amount of viewership dramas receive, and the outreach they have to global audiences. 

In particular, global channels, mainly streaming services like Netflix, Amazon Prime, Disney+, and Hulu (Statista, 2024), give audiences convenient access to international content, easily introducing new titles and dramas to them. 

Find out how common the channel you use to watch K-Dramas is among global audiences here!

```{=html}
<iframe height="t00" width="100%" frameborder="no" src="https://yeech1ng.shinyapps.io/sample_app/ "> </iframe>
```

Among the global streaming services-giant, Netflix is a clear winner in terms of the market share, garnering the most users who rely on their service to access dramas.

This suggests that dramas which are either **produced, distributed, or aired by Netflix** is likely able to tap into a **greater audience pool**, have **greater outreach**, and enjoy **bolstered viewership**.

```{r, eval=TRUE, echo=FALSE}
suppressMessages({
  suppressWarnings({
    
    library(tidyverse)
    library(ggplot2)
    library(plotly)
    library(RColorBrewer)
    
    general_kdrama_FILTERED <- general_kdrama %>% filter(year >= 2018)
    general_tdrama_FILTERED <- general_tdrama %>% filter(year >= 2018)
    general_jdrama_FILTERED <- general_jdrama %>% filter(year >= 2018)
    
    # Split channels into separate rows for each dataset
    general_kdrama_channelsplit <- general_kdrama_FILTERED %>%
      select(year, org_net) %>%
      separate_rows(org_net, sep = " ")
    
    general_tdrama_channelsplit <- general_tdrama_FILTERED %>%
      select(year, org_net) %>%
      separate_rows(org_net, sep = " ")
    
    general_jdrama_channelsplit <- general_jdrama_FILTERED %>%
      select(year, org_net) %>%
      separate_rows(org_net, sep = " ")
    
    # Merge the datasets
    merged_data_channels <- bind_rows(
      general_kdrama_channelsplit %>% mutate(language = "Korean"),
      general_tdrama_channelsplit %>% mutate(language = "Thai"),
      general_jdrama_channelsplit %>% mutate(language = "Japanese")
    )
    
    # Create a data frame with all combinations of channels and languages
    all_combinations <- expand.grid(org_net = c("Disney+", "Amazon", "Netflix", "Hulu"),
                                    language = c("Korean", "Thai", "Japanese"))
    
    # Merge with merged_data_channels to include counts, filling missing counts with 0
    merged_data_all <- merge(all_combinations, merged_data_channels, by = c("org_net", "language"), all.x = TRUE)
    
    # Fill missing counts with 0
    merged_data_all <- merged_data_all %>%
      left_join(count(merged_data_channels, org_net, language, .drop = FALSE), by = c("org_net", "language")) %>%
      mutate(n = ifelse(is.na(n), 0, n))
    
    # Add dummy rows for Thai dramas on Disney+ and Hulu with count 0
    dummy_rows <- data.frame(org_net = c("Disney+", "Hulu"),
                             language = "Thai",
                             n = 0)
    merged_data_all <- bind_rows(merged_data_all, dummy_rows)
    
    # Filter for selected channels
    selected_channels <- c("Disney+", "Amazon", "Netflix", "Hulu")
    filtered_data_all <- merged_data_all %>%
      filter(org_net %in% selected_channels)
    
    # Define color palette
    palette <- brewer.pal(n = 4, name = "Set2")
    
    # Plot grouped bar chart using Plotly
    channel_bg <- ggplot(filtered_data_all, aes(x = org_net, y = n, fill = language)) +
      geom_bar(stat = "identity", position = "dodge", color="black") +
      geom_text(aes(label = ifelse(n == 0, "0", "")), 
                position = position_dodge(width = 0.9), 
                vjust = -0.5, size = 3) +
      labs(title = "Number of Dramas distributed on Global Channels",
           x = "Channel",
           y = "Number of Dramas",
           fill = "Language") +
      scale_fill_manual(values = palette) +  # Set color palette
      theme_bw()
    
    # Convert ggplot object to Plotly
    ggplotly(channel_bg)
    
  })
})


```

separator
```{=html}
<style>
hr {
  border: none;
  height: 2px; /* Adjust the height as needed */
  background-color: #ccc; /* Adjust the color as needed */
  margin: 10px 0; /* Adjust the margin as needed */
}
</style>
```

------------------------------------------------------------------------

<!-- Content -->

From the graph, 2 main trends are obvious.

In terms of quantity, K-Dramas have the highest number of dramas distributed on global channels as compared to Thai and Japanese dramas. This can suggest that K-Dramas have 

In terms of quality, K-Dramas 


## 3. Content & Genre

Before we go into the genres of the different dramas, make your guess on what the most popular genre among K-Dramas is!

Simply click on the button of the option you think is right.

```{=html}
<iframe height="600" width="100%" frameborder="no" src="https://yeech1ng.shinyapps.io/genre_app/"> </iframe>
```
separator

```{r, eval=TRUE, echo=FALSE}
suppressMessages({
  suppressWarnings({
    library(tidyverse)
    library(ggplot2)
    library(plotly)
    library(RColorBrewer)

    # Filter datasets
    general_kdrama_FILTERED <- general_kdrama %>% filter(year >= 2018)
    general_tdrama_FILTERED <- general_tdrama %>% filter(year >= 2018)
    general_jdrama_FILTERED <- general_jdrama %>% filter(year >= 2018)

    # Split genres into separate rows for each dataset
    general_kdrama_genresplit <- general_kdrama_FILTERED %>% 
      select(year, genres) %>% 
      separate_rows(genres, sep = ",\\s*")

    general_tdrama_genresplit <- general_tdrama_FILTERED %>% 
      select(year, genres) %>% 
      separate_rows(genres, sep = ",\\s*")

    general_jdrama_genresplit <- general_jdrama_FILTERED %>% 
      select(year, genres) %>% 
      separate_rows(genres, sep = ",\\s*")

    # Merge the datasets
    merged_data_genres <- bind_rows(
      general_kdrama_genresplit %>% mutate(language = "Korean"),
      general_tdrama_genresplit %>% mutate(language = "Thai"),
      general_jdrama_genresplit %>% mutate(language = "Japanese")
    )

    # Select only the top 10 genres
    top_genres <- c("Drama", "Romance", "Comedy", "Thriller", "Mystery", 
                    "Melodrama", "Action", "Youth", "Life,", "Supernatural")
    merged_data_genres <- merged_data_genres %>% filter(genres %in% top_genres)

    # Define color palette
    palette <- brewer.pal(n = 4, name = "Set2")

    # Plot grouped bar chart using Plotly
    genre_bg <- ggplot(merged_data_genres, aes(x = genres, fill = language)) +
      geom_bar(stat = "count", position = "dodge", color="black") +
      labs(title = "Top 10 Genre Distribution",
           x = "Genre",
           y = "Number of Dramas",
           fill = "Language") +
      scale_fill_manual(values = palette) +  
      theme_bw()

    # Convert ggplot object to Plotly
    ggplotly(genre_bg)
  })
})


```
xxx
```{r, eval=TRUE, echo=FALSE}
suppressMessages({
  suppressWarnings({
    library(tidyverse)
    library(ggplot2)
    library(plotly)
    library(RColorBrewer)

    # Filter datasets
    general_kdrama_FILTERED <- general_kdrama %>% filter(year >= 2018)
    general_tdrama_FILTERED <- general_tdrama %>% filter(year >= 2018)
    general_jdrama_FILTERED <- general_jdrama %>% filter(year >= 2018)

    # Split genres into separate rows for each dataset
    general_kdrama_genresplit <- general_kdrama_FILTERED %>% 
      select(year, genres, tot_user_score) %>% 
      separate_rows(genres, sep = ",\\s*") %>%
      filter(genres == "Romance") %>%
      mutate(language = "Korean")

    general_tdrama_genresplit <- general_tdrama_FILTERED %>% 
      select(year, genres, tot_user_score) %>% 
      separate_rows(genres, sep = ",\\s*") %>%
      filter(genres == "Romance") %>%
      mutate(language = "Thai")

    general_jdrama_genresplit <- general_jdrama_FILTERED %>% 
      select(year, genres, tot_user_score) %>% 
      separate_rows(genres, sep = ",\\s*") %>%
      filter(genres == "Romance") %>%
      mutate(language = "Japanese")

    # Combine the datasets
    merged_data <- bind_rows(general_kdrama_genresplit, general_tdrama_genresplit, general_jdrama_genresplit)

    # Define color palette
    palette <- brewer.pal(n = 3, name = "Set2")

    # Plot grouped boxplot using Plotly for each language
    plot_korean <- ggplot(general_kdrama_genresplit, aes(x = year, y = tot_user_score)) +
      geom_boxplot() +
      labs(title = "User Ratings of Korean Romance Dramas",
           x = "Year",
           y = "Total User Score") +
      theme_bw() +
      scale_fill_manual(values = palette) +
      facet_wrap(~language)

    plot_thai <- ggplot(general_tdrama_genresplit, aes(x = year, y = tot_user_score)) +
      geom_boxplot() +
      labs(title = "User Ratings of Thai Romance Dramas",
           x = "Year",
           y = "Total User Score") +
      theme_bw() +
      scale_fill_manual(values = palette) +
      facet_wrap(~language)

    plot_japanese <- ggplot(general_jdrama_genresplit, aes(x = year, y = tot_user_score)) +
      geom_boxplot() +
      labs(title = "User Ratings of Japanese Romance Dramas",
           x = "Year",
           y = "Total User Score") +
      theme_bw() +
      scale_fill_manual(values = palette) +
      facet_wrap(~language)

    # Convert ggplot objects to Plotly
    plotly_korean <- ggplotly(plot_korean)
    plotly_thai <- ggplotly(plot_thai)
    plotly_japanese <- ggplotly(plot_japanese)
    
    # Display the plots
    plotly_korean
    plotly_thai
    plotly_japanese
  })
})


```


K-Drama Word Cloud

```{r, eval=TRUE, echo=FALSE}
suppressMessages({
  suppressWarnings({
  library(wordcloud2)
    library(tidyverse)
    library(tm)
    
    general_kdrama <- read.csv("datasets/kor_drama.csv")

suppressWarnings({
general_kdrama$year <- as.numeric(as.character(general_kdrama$year))
})
    
    kdrama_tags <- general_kdrama %>% filter(year >= 2018) %>% select(tags) 
    
    kdocs <- Corpus(VectorSource(kdrama_tags))
    
    kdocs <- kdocs %>% 
      tm_map(removePunctuation) 
    
    kdocs <- tm_map(kdocs, content_transformer(tolower))
    kdocs <- tm_map(kdocs, removeWords, stopwords("english"))
    
    kdtm <- TermDocumentMatrix(kdocs)
    kmatrix <- as.matrix(kdtm)
    kwords <- sort(rowSums(kmatrix), decreasing=TRUE)
    ktags_df <- data.frame(word=names(kwords), freq=kwords)
    
    wordcloud2(slice_max(ktags_df, order_by= freq, n=10000), size=1.2, color='random-dark', shape='circle')
  })
})
    
```
Thai Drama Word Cloud
```{r, eval=TRUE, echo=FALSE}
library(wordcloud2)
library(tidyverse)
library(tm)

general_tdrama <- read.csv("datasets/tha_drama.csv")

# Convert year to numeric 
suppressWarnings({

general_tdrama$year <- as.numeric(as.character(general_tdrama$year))

})
# Filter the data and create the word cloud
tdrama_tags <- general_tdrama %>% 
  filter(!is.na(year) & as.numeric(year) >= 2018) %>%  # Convert to numeric and ensure >= 2018
  select(tags)

tdocs <- Corpus(VectorSource(tdrama_tags))

tdocs <- tdocs %>% 
  tm_map(removePunctuation) 

tdocs <- tm_map(tdocs, content_transformer(tolower))
tdocs <- tm_map(tdocs, removeWords, stopwords("english"))

tdtm <- TermDocumentMatrix(tdocs)
tmatrix <- as.matrix(tdtm)
twords <- sort(rowSums(tmatrix), decreasing=TRUE)
ttags_df <- data.frame(word=names(twords), freq=twords)

wordcloud2(slice_max(ttags_df, order_by= freq, n=10000), size=1.2, color='random-dark', shape='circle')
```

Japanese Drama Word Cloud
```{r, eval=TRUE, echo=FALSE}
suppressMessages({
  suppressWarnings({
  library(wordcloud2)
    library(tidyverse)
    library(tm)
    
general_jdrama <- read.csv("datasets/jap_drama.csv")

# Convert year to numeric 
suppressWarnings({
general_jdrama$year <- as.numeric(as.character(general_jdrama$year))
})
    
    jdrama_tags <- general_jdrama %>% filter(year >= 2018) %>% select(tags) 
    
    jdocs <- Corpus(VectorSource(jdrama_tags))
    
    jdocs <- jdocs %>% 
      tm_map(removeNumbers) %>%
      tm_map(removePunctuation) %>%
      tm_map(stripWhitespace) 
    
    jdocs <- tm_map(jdocs, content_transformer(tolower))
    jdocs <- tm_map(jdocs, removeWords, stopwords("english"))
    
    jdtm <- TermDocumentMatrix(kdocs)
    jmatrix <- as.matrix(jdtm)
    jwords <- sort(rowSums(jmatrix), decreasing=TRUE)
    jtags_df <- data.frame(word=names(jwords), freq=jwords)
    
    wordcloud2(slice_max(jtags_df, order_by= freq, n=10000), size=1.2, color='random-dark', shape='circle')
  })
})

```







## 4. Production Volume 

```{r, eval=TRUE, echo=FALSE}
suppressMessages({
  suppressWarnings({
    library(tidyverse)
    library(RColorBrewer)
    library(plotly)

    # Read data from CSV files
    general_kdrama <- read.csv("datasets/kor_drama.csv")
    general_tdrama <- read.csv("datasets/tha_drama.csv")
    general_jdrama <- read.csv("datasets/jap_drama.csv")

    # Filter and convert columns to integers
    general_kdrama_filtered <- general_kdrama %>% 
      filter(year >= 2018) %>% 
      mutate(across(c(ep_duration, tot_eps), as.integer),
             year = as.integer(year))

    general_tdrama_filtered <- general_tdrama %>% 
      filter(year >= 2018) %>% 
      mutate(across(c(ep_duration, tot_eps), as.integer),
             year = as.integer(year))

    general_jdrama_filtered <- general_jdrama %>% 
      filter(year >= 2018) %>% 
      mutate(across(c(ep_duration, tot_eps), as.integer),
             year = as.integer(year))

    # Merge data
    merged_data_produced <- bind_rows(
      general_kdrama_filtered %>% mutate(language = "Korean"),
      general_tdrama_filtered %>% mutate(language = "Thai"),
      general_jdrama_filtered %>% mutate(language = "Japanese")
    )

    # Plotting with ggplot
    ggplot(merged_data_produced, aes(x = year, y = tot_eps, fill = language)) +
      geom_bar(stat = "identity", position = "fill") +
      scale_fill_brewer(palette = "Set2") +
      labs(title = "Yearly Production of Korean, Thai, and Japanese Dramas",
           x = "Year",
           y = "Proportion of Total Number of Dramas Produced") +
      theme_bw()
  })
})



```


## 5. Episode Count
```{r, eval=TRUE, echo=FALSE}

suppressMessages({
  suppressWarnings({
library(dplyr)
library(kableExtra)

# Calculate average number of episodes for each language drama per year
average_episodes <- top_5000dramas_filtered %>%
  group_by(released_year, Language) %>%
  summarise(Avg_Episodes = mean(Episodes))

# Rename column titles
colnames(average_episodes) <- c("Released Year", "Language", "Average No. of Episodes")

# Print the table using kableExtra
kable(average_episodes, "html") %>%
  kable_styling(bootstrap_options = c("striped", "hover"))
 })
})


```

separator

```{r, eval=TRUE, echo=FALSE}

suppressMessages({
  suppressWarnings({

library(ggplot2)
library(plotly)
library(RColorBrewer)

# Select relevant columns and filter data
rating_vs_eps <- top_5000dramas_filtered %>%
  select(Episodes, Rating, Language)

# Plotting
rating_vs_eps_plot <- ggplot(rating_vs_eps, aes(x = Episodes, y = Rating, color = Language)) + 
  geom_point() +
  labs(title = "Correlation between Ratings and Episode Count",
       x = "Episode Count",
       y = "Rating",
       color = "Language") +
  scale_color_brewer(palette = "Set2") +  
  theme_bw()

# Convert to Plotly for interactivity
ggplotly(rating_vs_eps_plot)

 })
})
```

```{=html}
<style>
hr {
  border: none;
  height: 2px; /* Adjust the height as needed */
  background-color: #ccc; /* Adjust the color as needed */
  margin: 10px 0; /* Adjust the margin as needed */
}
</style>
```

------------------------------------------------------------------------

<!-- Content -->

Across all 3 languages, there is a common trend of **dramas with less episodes receiving a higher rating**, though this is most evident in K-Dramas.

However, within a shorter episode count from 0 to 25, K-Dramas still lead and **surpass Thai and Japanese dramas** with a consistently higher rating. In fact, the highest rating drama (9.2) in the entire graph is a K-Drama!

This is possibly due to...

## 6. Actors

```{=html}
<iframe height="500" width="100%" frameborder="no" src="https://yeech1ng.shinyapps.io/actor_app/ "> </iframe>
```

## 7. Story

Storytelling is crucial.
```{r, eval=TRUE, echo=FALSE}
suppressMessages({
  suppressWarnings({
    # Load required libraries
    library(dplyr)
    library(plotly)
    library(RColorBrewer)

    # Read datasets
    kreviews <- read.csv("datasets/kor_user_reviews.csv")
    treviews <- read.csv("datasets/tha_user_reviews.csv")
    jreviews <- read.csv("datasets/jap_user_reviews.csv")

    # Combine all data into one dataframe
    all_reviews <- bind_rows(
      mutate(kreviews, language = "Korean"),
      mutate(treviews, language = "Thai"),
      mutate(jreviews, language = "Japanese")
    )

    # Define color palette using colorbrewer
    palette <- brewer.pal(n = 3, name = "Set2")

    # Create boxplot with plotly
    plot_ly(all_reviews, x = ~language, y = ~story, type = 'box', 
            marker = list(color = palette)) %>%
      layout(title = "Distribution of User Ratings on Drama's Story",
             xaxis = list(title = "Language"),
             yaxis = list(title = "Rating on Story"),
             showlegend = FALSE)
  })
})

```


```{r, eval=TRUE, echo=FALSE}
library(dplyr)
library(ggplot2)
library(RColorBrewer)

# Read data from CSV files
kreviews <- read.csv("datasets/kor_user_reviews.csv")
treviews <- read.csv("datasets/tha_user_reviews.csv")
jreviews <- read.csv("datasets/jap_user_reviews.csv")

# Function to create correlation plot
create_plot <- function(data, language) {
  palette <- brewer.pal(3, "Set2")  # Get color palette
  
  ggplot(data, aes(x = story, y = overall)) +
    geom_jitter(aes(color = language), show.legend = FALSE) +
    geom_smooth(aes(color = language), show.legend = FALSE) +
    ggtitle(paste("Correlation between Story Ratings and Overall Ratings for", language, "dramas")) +
    xlab("Story Ratings") +
    ylab("Overall Ratings") +
    scale_color_manual(values = palette)  # Set color scale
}

# Create plots for each language
korean_plot <- create_plot(kreviews, "Korean")
thai_plot <- create_plot(treviews, "Thai")
japanese_plot <- create_plot(jreviews, "Japanese")

# Print the plots
print(korean_plot)
print(thai_plot)
print(japanese_plot)
```








# Insights and Recommendations

# References

*Escandon, R. (2020, March 12). The film industry made a record-breaking $100 billion last year. Forbes. https://www.forbes.com/sites/rosaescandon/2020/03/12/the-film-industry-made-a-record-breaking-100-billion-last-year/?sh=5b3657bb34cd*

*Netflix. (n.d.). Netflix top 10 - global. Www.netflix.com. https://www.netflix.com/tudum/top10/most-popular/tv-non-english*

*Statista. (2023a, July 15). South Korea: Leading South Korean dramas abroad 2022. Statista. https://www.statista.com/statistics/1266541/south-korea-leading-south-korean-dramas-abroad/*

*Statista. (2023b, December 22). South Korea: Export value of k-dramas by type of broadcast 2020. Statista; Statista Research Department. https://www.statista.com/statistics/1274248/south-korea-export-value-of-kdramas-by-type-of-broadcast/*

*Statista. (2024, February 13). Global streaming services traffic volume 2020. Statista; Laura Ceci. https://www.statista.com/statistics/187011/svod-video-platforms-traffic/*
