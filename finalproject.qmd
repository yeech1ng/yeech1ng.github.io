---
title: "Final Project: What makes K-Dramas so popular globally?"
---

![watching dramas](images/finalproj_1){width="900"}

# Introduction

```{r, eval=TRUE, echo=FALSE}

suppressMessages({
  suppressWarnings({
    library(ggplot2)
    library(RColorBrewer)
    library(plotly, warn.conflicts = FALSE)
    

# Read the CSV file
kdrama_pop_2022 <- read.csv("datasets/k-drama-popularity-worldwide-2022.csv", fill=TRUE)

# Define custom order for the levels of the "Popularity" variable
popularity_order <- c("Very popular", "Moderately popular", "Slightly popular", "Not popular")
kdrama_pop_2022$Popularity <- factor(kdrama_pop_2022$Popularity, levels = popularity_order)

# Create a vector of colors for the bars
colors <- brewer.pal(4, "Set3") 

# Create the bar plot with specified colors and custom order
bp1 <- ggplot(kdrama_pop_2022, aes(x = Popularity, y = Percentage, fill = Popularity)) +
  geom_bar(stat = "identity") +
  labs(title = "K-Drama Popularity Worldwide in 2022", x = "Popularity", y = "Percentage", caption = "Source: Statista") +
  theme_bw() +
  scale_fill_manual(values = colors)

ggplotly(bp1)

  })
})
```

# Comparison with Japanese and Thai Dramas

## 1. Ratings

```{r, eval=TRUE, echo=FALSE}
suppressMessages({
  suppressWarnings({
    library(ggplot2)
    library(RColorBrewer)
    library(tidyverse)
  
top_5000dramas <- read.csv("datasets/top_5000_dramas.csv")

top_5000dramas_filtered <- top_5000dramas %>%
  filter(released_year >= 2018 & grepl("Japanese|Thai|Korean", Language))

colors <- brewer.pal(3, "Set2") 

# Calculate average ratings for each language
avg_ratings <- top_5000dramas_filtered %>%
  group_by(Language) %>%
  summarize(avg_rating = mean(Rating, na.rm = TRUE))

# Create a bar plot
bp2 <- ggplot(avg_ratings, aes(x = Language, y = avg_rating, fill = Language)) +
  geom_bar(stat = "identity") +
  labs(title = "Average Ratings of Thai, Japanese, and Korean Dramas from 2018 to 2023",
       x = "Language", y = "Average Rating") +
  theme_bw() + scale_fill_manual(values = colors)

ggplotly(bp2)

  })
})

```

separator text placeholder

```{r, eval=TRUE, echo=FALSE}


general_kdrama <- read.csv("datasets/kor_drama.csv")
general_tdrama <- read.csv("datasets/tha_drama.csv")
general_jdrama <- read.csv("datasets/jap_drama.csv")

# Convert year to numeric 
suppressWarnings({
general_kdrama$year <- as.numeric(as.character(general_kdrama$year))
general_tdrama$year <- as.numeric(as.character(general_tdrama$year))
general_jdrama$year <- as.numeric(as.character(general_jdrama$year))
})

# Filter data and calculate average rating per year
kdrama_avg_rating <- general_kdrama %>%
  filter(year >= 2018) %>%
  group_by(year) %>%
  summarize(avg_user_score = mean(tot_user_score, na.rm = TRUE), language = "Korean")

tdrama_avg_rating <- general_tdrama %>%
  filter(year >= 2018) %>%
  group_by(year) %>%
  summarize(avg_user_score = mean(tot_user_score, na.rm = TRUE), language = "Thai")

jdrama_avg_rating <- general_jdrama %>%
  filter(year >= 2018) %>%
  group_by(year) %>%
  summarize(avg_user_score = mean(tot_user_score, na.rm = TRUE), language = "Japanese")

# Combine the dataframes
combined_data <- bind_rows(kdrama_avg_rating, tdrama_avg_rating, jdrama_avg_rating)

# Colours
colors <- brewer.pal(3, "Set2")

# Plot the line graph
lg1 <- ggplot(combined_data, aes(x = year, y = avg_user_score, colour=language)) +
  geom_line() +
  labs(title = "User Scores from 2018 to 2023", x = "Year", y = "Average User Score") +
  theme_bw() +  scale_color_brewer(palette = "Set2")

ggplotly(lg1)

```

## 2. Genre

```{r letter-a, echo=FALSE}

```
```{r, eval=TRUE, echo=FALSE}
suppressMessages({
  suppressWarnings({

library(wordcloud2)
library(tidyverse)
library(tm)

kdrama_tags <- general_kdrama %>% filter(year >= 2018) %>% select(tags) 

kdocs <- Corpus(VectorSource(kdrama_tags))

kdocs <- kdocs %>% 
  tm_map(removeNumbers) %>%
  tm_map(removePunctuation) %>%
  tm_map(stripWhitespace) 

kdocs <- tm_map(kdocs, content_transformer(tolower))
kdocs <- tm_map(kdocs, removeWords, stopwords("english"))

kdtm <- TermDocumentMatrix(kdocs)
kmatrix <- as.matrix(kdtm)
kwords <- sort(rowSums(kmatrix), decreasing=TRUE)
ktags_df <- data.frame(word=names(kwords), freq=kwords)

wordcloud2(slice_max(ktags_df, order_by= freq, n=10000), size=1.2, color='random-dark', shape='circle')

 })
})
```




separator text placeholder


```{=html}
<iframe height="400" width="100%" frameborder="no" src="https://yeech1ng.shinyapps.io/sample_app/ "> </iframe>
```
